name: Unit Test

on:
  pull_request:

jobs:
  build:
    name: Unit Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.1.0

      - name: Go Setup
        uses: actions/setup-go@v5
        with:
          go-version: ^1.17

      - name: Go Test
        run: make test

      - name: Get pull request issue number
        id: vars
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then \
            echo "::set-output name=issue-number::${{ github.event.number }}"; \
          else \
            echo "::set-output name=issue-number::1"; \
          fi

      - name: Test Create comment message
        id: get-comment-body
        run: |
          test=$(cat coverage.txt|awk -F ' ' '{print "%0D |"$1"|"$2"|"}')
          body="# ユニットテスト結果"
          body="${body} %0A%0D | package | Coverage | %0D |-|-|"
          body="${body} ${test}"
          echo ::set-output name=body::$body

      - name: Test Find comments
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ steps.vars.outputs.issue-number }}
          comment-author: github-actions[bot]
      - if: steps.fc.outputs.comment-id == null

        name: Test Create comments
        uses: peter-evans/create-or-update-comment@v2
        id: coverage-comment
        with:
          issue-number: ${{ steps.vars.outputs.issue-number }}
          body: |
            ${{ steps.get-comment-body.outputs.body }}
      - if: steps.fc.outputs.comment-id != null

        name: Test Update comments
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ${{ steps.get-comment-body.outputs.body }}
